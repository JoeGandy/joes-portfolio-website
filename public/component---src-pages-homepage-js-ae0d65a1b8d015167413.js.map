{"version":3,"sources":["webpack:///./src/prismic-configuration.js","webpack:///./src/pages/homepage.js","webpack:///./src/utils/time.js"],"names":["prismic_configuration","apiEndpoint","linkResolver","doc","require","FaComponent","FaFacebook","FaGithub","FaLinkedin","FaSteam","FaFileAlt","FaRssSquare","FaGitlab","FaLastfmSquare","HomePage","props","_this","_React$Component","call","this","state","homePageData","tracks","buildContext","then","prismicCtx","api","query","Prismic","Predicates","at","orderings","response","setState","results","fetch","json","data","recenttracks","track","catch","e","console","error","render","prismic_title","main_header","text","prismic_tagline","tag_line","prismic_links","main_links","react_default","a","createElement","className","Helmet","title","charSet","name","content","lang","map","link","i","Tag","item_icon","key","href","item_link","url","target","item_text","rel","size","length","now_playing","src","image","artist","current","previous","elapsed","plural","Math","round","msPerMinute","msPerHour","msPerDay","timeDifference","Date","date","uts","accessToken","PrismicConfig","endpoint","React","Component"],"mappings":"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","file":"component---src-pages-homepage-js-ae0d65a1b8d015167413.js","sourcesContent":["export default {\n\n    apiEndpoint: 'https://gandymainwebsite.cdn.prismic.io/api/v2',\n\n    // -- Links resolution rules\n    linkResolver(doc) {\n        //if (doc.type === 'page') return `/page/${doc.uid}`;\n        return '/';\n    },\n};","import React from 'react';\nimport {\n  FaGithub,\n  FaFacebook,\n  FaLinkedin,\n  FaSteam,\n  FaFileAlt,\n  FaRssSquare,\n  FaGitlab,\n  FaLastfmSquare,\n} from 'react-icons/fa';\nimport {Helmet} from 'react-helmet';\nimport Prismic from 'prismic-javascript';\nimport PrismicConfig from '../prismic-configuration';\nimport {timeDifference} from '../utils/time';\n\nrequire('../scss/main.scss');\n\n// Allows us to map strings from prismic to react components\nconst FaComponent = {\n  'FaFacebook': FaFacebook,\n  'FaGithub': FaGithub,\n  'FaLinkedin': FaLinkedin,\n  'FaSteam': FaSteam,\n  'FaFileAlt': FaFileAlt,\n  'FaRssSquare': FaRssSquare,\n  'FaGitlab': FaGitlab,\n  'FaLastfmSquare': FaLastfmSquare,\n};\n\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      homePageData: null,\n      tracks: [],\n    };\n\n    //Query prismic and pull our homepage data.\n    this.buildContext().then((prismicCtx) => {\n      prismicCtx.api.query(\n        Prismic.Predicates.at('document.type', 'homepage'),\n        {orderings: '[my.homepage.date desc]'},\n      ).then(response => {\n        this.setState({homePageData: response.results[0]});\n      });\n      fetch('http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=joegandy1&api_key=6900d6827e2c0d6248e54a385fe242b6&format=json')\n        .then(response => response.json())\n        .then(data => this.setState({tracks: data.recenttracks.track}));\n\n    }).catch((e) => {\n      console.error(`Cannot contact the API, check your prismic configuration:\\n${e}`);\n    });\n  }\n\n  render() {\n    //Setup our data for a nice render\n    let data = this.state.homePageData ? this.state.homePageData.data : null;\n    let prismic_title = data ? data.main_header[0].text : 'Joe Gandy';\n    let prismic_tagline = data ? data.tag_line[0].text : 'Web Developer';\n    let prismic_links = data ? data.main_links : [];\n    let tracks = this.state.tracks;\n\n    return <div className=\"_main_wrapper\">\n      <Helmet title={prismic_title + ' - ' + prismic_tagline}>\n        <meta charSet=\"utf-8\"/>\n        <meta name=\"description\"\n              content=\"Joe Gandy a web developer from derby specialising in backend apis, drupal with front end work with react and gatsby\"/>\n        <meta name=\"keywords\"\n              content=\"drupal, react, developer, web, php, derby\"/>\n        <html lang=\"en\"/>\n      </Helmet>\n      <div className=\"_center_box\">\n        <div className=\"_avatar\"/>\n        <h1 className=\"_main_title\">{prismic_title}\n          <span>{prismic_tagline}</span></h1>\n        <ul className=\"_icons\">\n          {prismic_links.map(function(link, i) {\n            let Tag = FaComponent[link.item_icon];\n            return <li key={i}>\n              <a href={link.item_link.url} target={'_blank'}\n                 title={link.item_text[0].text}\n                 rel={'noopener'}>\n                <Tag size={'2em'}/>\n              </a>\n            </li>;\n          })}\n        </ul>\n      </div>\n      {tracks.length > 0 ?\n        <div className={'_recent_tracks ' + (tracks.length > 0 ? 'load' : '')}>\n          <h3>What I've been listening too</h3>\n          {tracks.map(function(track, i) {\n            if (i > 5) {\n              return;\n            }\n            let now_playing = track['@attr'] && track['@attr']['nowplaying'];\n            return <a key={i} href={track.url} target=\"_blank\">\n              <div className=\"_track\">\n                <div className=\"_image\">\n                  <img src={track.image[0]['#text']}/>\n                </div>\n                <p className=\"_track_artist\">{track.artist['#text']}</p>\n                <p className=\"_track_name\">{track.name}</p>\n                {now_playing ?\n                  <p className='_play_status _now_playing'>Playing now</p> :\n                  <p\n                    className='_play_status _played'>{timeDifference(new Date(), new Date(track.date.uts * 1000))}</p>}\n              </div>\n            </a>;\n          })}\n        </div>\n        : ''}\n    </div>;\n\n  }\n\n  buildContext() {\n    const accessToken = PrismicConfig.accessToken;\n    return Prismic.api(PrismicConfig.apiEndpoint, {accessToken}).then(api => ({\n      api,\n      endpoint: PrismicConfig.apiEndpoint,\n      accessToken,\n      linkResolver: PrismicConfig.linkResolver,\n    }));\n  }\n}\n","export function timeDifference(current, previous) {\n\n    var msPerMinute = 60 * 1000;\n    var msPerHour = msPerMinute * 60;\n    var msPerDay = msPerHour * 24;\n    var msPerMonth = msPerDay * 30;\n    var msPerYear = msPerDay * 365;\n\n    var elapsed = current - previous;\n\n    if (elapsed < msPerMinute) {\n        let plural = Math.round(elapsed / 1000) !== 1;\n         return Math.round(elapsed/1000) + ' sec' + (plural ? 's' : '') + ' ago';\n    }\n\n    else if (elapsed < msPerHour) {\n            let plural = Math.round(elapsed / msPerMinute) !== 1;\n         return Math.round(elapsed/msPerMinute) + ' min' + (plural ? 's' : '') + ' ago';\n    }\n\n    else if (elapsed < msPerDay ) {\n        let plural = Math.round(elapsed / msPerHour) !== 1;\n         return Math.round(elapsed/msPerHour ) + ' hour' + (plural ? 's' : '') + ' ago';\n    }\n\n    else if (elapsed < msPerMonth) {\n        let plural = Math.round(elapsed / msPerDay) !== 1;\n        return Math.round(elapsed/msPerDay) + ' day' + (plural ? 's' : '') + ' ago';\n    }\n\n    else if (elapsed < msPerYear) {\n        let plural = Math.round(elapsed / msPerMonth) !== 1;\n        return Math.round(elapsed/msPerMonth) + ' month' + (plural ? 's' : '') + ' ago';\n    }\n\n    else {\n        let plural = Math.round(elapsed / msPerYear) !== 1;\n        return Math.round(elapsed/msPerYear ) + ' year' + (plural ? 's' : '') + ' ago';\n    }\n}\n"],"sourceRoot":""}